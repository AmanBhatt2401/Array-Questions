#include<iostream> 
using namespace std; 


void swap(int *x, int *y)
{
    int temp = *x;
    *x = *y;
    *y = temp;
}


void segregateEvenOdd(int nums[], int size)
{
    int left_num = 0, right_num = size - 1; // Initialize left and right pointers

    // Iterate until the left pointer is less than the right pointer
    while (left_num < right_num)
    {
        // Move the left pointer to the right until an odd number is encountered
        while (nums[left_num] % 2 == 0 && left_num < right_num)
            left_num++;

        // Move the right pointer to the left until an even number is encountered
        while (nums[right_num] % 2 == 1 && left_num < right_num)
            right_num--;

        // If left pointer is still less than the right pointer, swap the elements
        if (left_num < right_num)
        {
            swap(&nums[left_num], &nums[right_num]); // Swap the elements at left and right pointers
            left_num++; // Increment left pointer
            right_num--; // Decrement right pointer
        }
    }
}


int main()
{
    int nums[] = {0, 1, 3, 4, 5, 6, 7, 8, 10}; 
    int n = sizeof(nums) / sizeof(nums[0]); 
    cout << "Original array: ";
    for (int i = 0; i < n; i++)
        cout << nums[i] << " "; 
    segregateEvenOdd(nums, n); 
    cout << "\nArray after segregation: ";
    for (int i = 0; i < n; i++)
        cout << nums[i] << " "; 
    return 0;
}
